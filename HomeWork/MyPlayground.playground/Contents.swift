import UIKit

// Создайте пустой словарь responseMessages, для ключа тип числовой, для значения строка.

var responseMessages : [ Int : String] = [:]

//Добавьте в пустой cловарь ключи 500, 404, 403, 200, а значения "OK","Access Forbidden","File Not Found","Internal Server Error"

responseMessages[500] = "Internal Server Error"
responseMessages[404] = "File Not Found"
responseMessages[403] = "Access Forbidden"
responseMessages[200] = "OK"

//  Создайте массив httpResponseCodes c числами 200, 403, 301

var httpResponseCodes = [200 , 403 , 301]

//  Переберите массив httpResponseCode в цикле чтоб при каждой итерации вы проверяли код массива в словаре responseMessage и если код
//такой есть то выводить в консоль ключ и значение, если нет писать неизвестный код и выводить код.

for code in httpResponseCodes {
    if let status = responseMessages[code] {
        print("Код \(code): \(status)")
    } else {
        print("Неизвестный код: \(code)")
    }
}

// Отсортируйте все ключи по порядку 200, 403 и тд.

responseMessages.keys.sorted()

// Распечатайте в цикле все ключи и значения.

for (key, value) in responseMessages {
    print("Код \(key), Значение - \(value)")
}

//Создайте словарь с ключами primes, triangular, hexagonal, у каждого ключа значение это массив [2, 13, 15, 7, 11, 3, 5], у второго значения массив [21, 6, 3, 10, 15, 1, 28], у третьего [1, 91, 15, 28, 45, 66, 6]

var Dictionary : [String:[Int]] = [
    "primes" : [2, 13, 15, 7, 11, 3, 5],
    "triangular" : [21, 6, 3, 10, 15, 1, 28],
    "hexagonal" : [1, 91, 15, 28, 45, 66, 6]
    ]

// Отсортируйте содержимое каждого массива по возрастанию.

for (key, var masif) in Dictionary {
    masif = masif.sorted()
    Dictionary[key] = masif
}

for (key, values) in Dictionary {
    print(key)
    print(values)
}

//Создать 2 словаря в 1 ключ и значение «a»: «b», у второго «c»: «d» нужно объединить эти 2 словаря не используя +=.

var Dic1 = ["a": "b"]
var Dic2 = ["c": "d"]

for (key, value) in Dic2 {
    Dic1[key] = value
}

print(Dic1)

//Создать переменную а = 1 и вторую b = 2, поменяйте местами значения у 2х переменных 2 мя способами.
//Первый способ
var a = 1
var b = 2

let temp = a
a = b
b = temp

//Второй Способ

swap(&a, &b)


//Опишите что такое словарь, почему его иногда называют хеш мап, и это class или struct.

"""
Словарь - это неупорядоченная коллекция, которая содержит в себе данный по типу ключ - значение, обеспесивает быстрый доступ к ключам используя хэш значение, по этому их нащзывают хэш мапами или хэш таблицами

 В SWIFT словари реализованы как структуры в стандартной библиотеке языка

"""

//Напишите какие протоколы комформит словарь и для чего они (только кратко).

"""

Collection
- Определяет базовую функциональность коллекции, такую как доступ к элементам и выполнение итераций.

Sequence
- Предоставляет возможность выполнения итераций по элементам коллекции.
- Позволяет использовать циклы for-in для перебора элементов словаря.

ExpressibleByDictionaryLiteral:
- Позволяет создавать словари с литералами (например, [Key: Value]) для более удобного создания словарей.

CustomStringConvertible и CustomDebugStringConvertible:
- Позволяют определить пользовательские описания (строковое представление) для словарей и их элементов.

Equatable:
- Позволяет сравнивать словари на равенство с другими словарями.

Hashable:
- Позволяет использовать словари в других коллекциях, таких как множества (sets), которые требуют хеширования элементов.

"""
